import { MongoClient } from 'mongodb';
export interface MongoServerOptions {
    binDir?: string;
    binary: string;
    tmpDir: string;
    logDir?: string;
    args?: string[];
    docker?: string | string[];
}
export declare class MongoServer {
    private buildInfo?;
    private childProcess?;
    private pid?;
    private port?;
    private dbPath?;
    private closing;
    private constructor();
    serialize(): unknown;
    static deserialize(serialized: any): Promise<MongoServer>;
    get hostport(): string;
    get serverVersion(): string;
    get serverVariant(): 'enterprise' | 'community';
    static start({ ...options }: MongoServerOptions): Promise<MongoServer>;
    static _start({ ...options }: MongoServerOptions): Promise<MongoServer>;
    close(): Promise<void>;
    private _populateBuildInfo;
    withClient<Fn extends (client: MongoClient) => any>(fn: Fn): Promise<ReturnType<Fn>>;
    ref(): void;
    unref(): void;
}
//# sourceMappingURL=mongoserver.d.ts.map